# Some comment

name: NetX Build + Deploy

on:
  workflow_dispatch:
    inputs:
        nuget_version:
           default: "1"
           type: string
           description: "The version number of the nuget package to be created"

jobs:

  build:
    name: Build netx
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Starting
      run: echo [Build Started]

    - name: Echo Input
      run: echo You entered ${{ github.event.inputs.nuget_version }}

    - name: Setup .NET 10 SDK
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '10.0.x'


    # - name: Replace content of files with nuget version
    #   run: dotnet run build_script.cs ${{ github.event.inputs.nuget_version }}
      
    - name: Restore dependencies
      run: dotnet restore
      
        
    - name: Build
      run: dotnet build -p:NugetVersion=${{ github.event.inputs.nuget_version }} --configuration Release --no-restore

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
       name: netx-build-outputs-${{ github.event.inputs.nuget_version }}
       path: NetxFramework/bin/release
            

    - name: Ending
      run: echo [Build Complete]

  deploy:
    name:  Publish netx
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:

    - name: Starting
      run: echo [Deploy Started]

    - name: Echo Input
      run: echo You entered ${{ github.event.inputs.nuget_version }}

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
       name: netx-build-outputs-${{ github.event.inputs.nuget_version }}
       path: .
      
    - name: Publish to NuGet
      run: dotnet nuget push thinkmine.netx.framework.${{ github.event.inputs.nuget_version }}-preview.nupkg \
            --api-key oy2cepu5cptzufschscqnsjyqgtzc4sebnnafo6fk7urrq \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
            

    - name: End
      run: echo [Deploy Complete]

